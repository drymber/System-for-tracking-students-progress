<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        1bglANW4JQDVuCUA1bglANW4JQDVuCUA1bglANW4JQDVuCUA1bglANW4JQDVuCUA1bgmANWAAAAAAAAA
        AAAAAAAAJQDVaCYA1/8kANNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgDX/yQA1qgAAAAAAAAAAAAA
        AAAlANaDJQDW8CUA1vAlANbwJQDW8CUA1vAlANbwJQDW8CUA1vAlANbwJQDW8CUA1vAlANbwJQDW8CQA
        1boAAL8IAAAAAAAAAAAlANVoJgDX/yQA00AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmANf/JADWqAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACUA1WgmANf/JADTQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYA
        1/8kANaoAAAAAAAAAAAAAAAAAAB/BCAAzyAgAM8gIADPICAAzyAgAM8gIADPICAAzyAgAM8gIADPICAA
        zyAgAM8gIADPICAAzyAUAMQNAAAAAAAAAAAAAAAAJQDVaCYA1/8kANNAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAJgDX/yQA1qgAAAAAAAAAAAAAAAAlANWeJgDX/yYA1/8mANf/JgDX/yYA1/8mANf/JgDX/yYA
        1/8mANf/JgDX/yYA1/8mANf/JgDX/yUA1toAAL8IAAAAAAAAAAAlANVoJgDX/yQA00AAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAmANf/JADWqAAAAAAAAAAAAAAAACAA1DAlANaIJQDWiCUA1oglANaIJQDWiCUA
        1oglANaIJQDWiCUA1oglANaIJQDWiCUA1oglANaIJADUVAAAAAAAAAAAAAAAACUA1WgmANf/JADTQAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACYA1/8kANaoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQDVaCYA
        1/8kANNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgDX/yQA1qgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAlANVoJgDX/yQA00AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmANf/JADWqAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACUA1WgmANf/JADTQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYA1/8lANX3JADW6CQA
        1ugkANboJADW6CQA1ugkANboJADW6CQA1ugkANboJADW6CQA1ugkANboJADW6CQA1ugkANboJADW6CQA
        1ugkANboJADW6CQA1ugkANboJQDV8SYA1/8kANI/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQDVaCUA
        1sAlANbAJQDWwCUA1sAlANbAJQDWwCUA1sAlANbAJQDWwCUA1sAlANbAJQDWwCUA1sAlANbAJQDWwCUA
        1sAlANbAJQDWwCUA1sAlANbAJQDWwCUA1sAlANbAJQDVlwAAfwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////v////x/wAAYP8AAGB/P//gHz//xg8//8+HOAf/wz//
        /3E///94PAAPfzwAD38///9/P///fzgAD38///9/P///fzwAD384AA9/P///fz///384AA9/PAAffz//
        /38///9/P///fwAAAH+AAAB///////////8=
</value>
  </data>
</root>